################## Spring Config ##################
spring:
  application:
    name: htcc-gateway-service
  profiles:
    active: ${env:local}
  zipkin:
    enabled: false
  jmx:
    enabled: false
  main:
    allow-bean-definition-overriding: true
  jpa:
    hibernate:
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5Dialect
  admin-datasource:
    options: useSSL=false&zeroDateTimeBehavior=convertToNull&useUnicode=yes&characterEncoding=UTF-8
    url: jdbc:mysql://${spring.admin-datasource.server}/${spring.admin-datasource.schemaName}?${spring.admin-datasource.options}
    username: ${security.user.name}
    password: ${security.user.password}
  company-datasource:
    options: useSSL=false&zeroDateTimeBehavior=convertToNull&useUnicode=yes&characterEncoding=UTF-8
    url: jdbc:mysql://${spring.company-datasource.server}/${spring.company-datasource.schemaName}?${spring.company-datasource.options}
    username: ${security.user.name}
    password: ${security.user.password}

################## Eureka Config ##################
eureka:
  dashboard:
    path: /dashboard
  client:
    register-with-eureka: true
    fetch-registry: true
  instance:
    appname: ${spring.application.name}
    leaseExpirationDurationInSeconds: 45
  server:
    enableSelfPreservation: false

management:
  endpoints:
    enabled-by-default: false

################## Logging Config ##################
logging:
  config: classpath:log4j2.properties

################## Zuul Config ##################
zuul:
  sensitiveHeaders:
  ignoredHeaders: Access-Control-Allow-Origin
  ribbon:
    eager-load:
      enabled: true
  ignored-services: '*'
  prefix: /api
  routes:
    htcc-gateway-service:
      path: /gateway/**
      serviceId: htcc-gateway-service
    htcc-employee-service:
      path: /employee/**
      serviceId: htcc-employee-service
    htcc-admin-service:
      path: /admin/**
      serviceId: htcc-admin-service

ribbon:
  eureka:
    enabled: true
  ReadTimeout: 30000
  ConnectTimeout: 30000
  ServerListRefreshInterval: 2000
  eager-load:
    enabled: true
    clients: htcc-employee-service, htcc-admin-service

htcc-employee-service:
  ribbon:
    eureka:
      enabled: true
    MaxAutoRetries: 2
    MaxAutoRetriesNextServer: 2
    OkToRetryOnAllOperations: true
    ReadTimeout: 30000
    ConnectTimeout: 30000
    ServerListRefreshInterval: 1000

htcc-admin-service:
  ribbon:
    eureka:
      enabled: true
    MaxAutoRetries: 2
    MaxAutoRetriesNextServer: 2
    OkToRetryOnAllOperations: true
    ReadTimeout: 30000
    ConnectTimeout: 30000
    ServerListRefreshInterval: 2000


################## Service Config ##################
service:
  debugMode: false
  maxFileSize: 10000000

security:
  bypassJWT: false
  jwt:
    key: "gmDJYOtCOvOgzuC5u3XViSq8pxf7BerA"
    expireSecond: 86400

################## Redis Config ##################
redis:
  delimiterAddress: ;
  scanInterval: 5000
  slaveConnectionMinimumIdleSize: 10
  slaveConnectionPoolSize: 100
  masterConnectionMinimumIdleSize: 10
  masterConnectionPoolSize: 100
  idleConnectionTimeout: 10000
  connectTimeout: 10000
  responseTimeout: 10000
  retryAttempts: 3
  retryInterval: 1000
  readMode: SLAVE
  masterAddress:

################## Kafka Config ##################
kafka:
  buz:
    apiLog:
      topicName: API-LOG
      groupId: API-LOG
    eventUpdateCompanyUser:
      topicName: EVENT-UPDATE-COMPANY-USER
      groupId: EVENT-UPDATE-COMPANY-USER
    eventUpdateEmployeeInfo:
      topicName: EVENT-UPDATE-EMPLOYEE-INFO
      groupId: EVENT-UPDATE-EMPLOYEE-INFO
    eventChangeLogInStatus:
      topicName: EVENT-CHANGE-LOGIN-STATUS
      groupId: EVENT-CHANGE-LOGIN-STATUS
    eventResetPassword:
      topicName: EVENT-RESET-PASSWORD
      groupId: EVENT-RESET-PASSWORD
