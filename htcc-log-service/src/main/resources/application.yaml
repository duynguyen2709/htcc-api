################## Spring Config ##################
spring:
  application:
    name: htcc-log-service
  profiles:
    active: ${env:local}
  zipkin:
    enabled: false
  jmx:
    enabled: false
  jpa:
    hibernate:
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5Dialect
  datasource:
    options: useSSL=false&zeroDateTimeBehavior=convertToNull&useUnicode=yes&characterEncoding=UTF-8&useServerPrepStmts=false&rewriteBatchedStatements=true
    url: jdbc:mysql://${spring.datasource.server}/${spring.datasource.schemaName}?${spring.datasource.options}
    username: ${security.user.name}
    password: ${security.user.password}
    testWhileIdle: true
    testOnBorrow: true
    timeBetweenEvictionRunsMillis: 60000
    validationQuery: SELECT 1
  mail:
    host: smtp.gmail.com
    port: 587
    username: "htcc.system@gmail.com"
    password: "6h5K8dapxfFdVKAS"
    properties:
      mail:
        smtp:
          auth: true
          connectiontimeout: 10000
          timeout: 10000
          writetimeout: 10000
          starttls:
            enable: true

################## Eureka Config ##################
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
  instance:
    appname: ${spring.application.name}

################## Logging Config ##################
logging:
  config: classpath:log4j2.properties

################## Service Config ##################
service:
  debugMode: false
  schedule:
    leaveRequest: 1 0 0 * * *
    leaveRequestEnable: true

################## Redis Config ##################
redis:
  delimiterAddress: ;
  scanInterval: 5000
  slaveConnectionMinimumIdleSize: 10
  slaveConnectionPoolSize: 100
  masterConnectionMinimumIdleSize: 10
  masterConnectionPoolSize: 100
  idleConnectionTimeout: 10000
  connectTimeout: 10000
  responseTimeout: 10000
  retryAttempts: 3
  retryInterval: 1000
  readMode: SLAVE
  masterAddress:

################## Kafka Config ##################
kafka:
  buz:
    apiLog:
      topicName: API-LOG
      groupId: API-LOG
    checkInLog:
      topicName: CHECKIN-LOG
      groupId: CHECKIN-LOG
    checkOutLog:
      topicName: CHECKOUT-LOG
      groupId: CHECKOUT-LOG
    complaintLog:
      topicName: COMPLAINT-LOG
      groupId: COMPLAINT-LOG
    leavingRequestLog:
      topicName: LEAVING-REQUEST-LOG
      groupId: LEAVING-REQUEST-LOG
    eventCreateUser:
      topicName: EVENT-CREATE-USER
      groupId: EVENT-CREATE-USER
    eventReadNotification:
      topicName: EVENT-READ-NOTIFICATION
      groupId: EVENT-READ-NOTIFICATION
    eventChangeLogInStatus:
      topicName: EVENT-CHANGE-LOGIN-STATUS
      groupId: EVENT-CHANGE-LOGIN-STATUS
    eventPushNotification:
      topicName: EVENT-PUSH-NOTIFICATION
      groupId: EVENT-PUSH-NOTIFICATION
    eventAdminSendNotification:
      topicName: EVENT-ADMIN-SEND-NOTIFICATION
      groupId: EVENT-ADMIN-SEND-NOTIFICATION
    eventRequireIcon:
      topicName: EVENT-REQUIRE-ICON
      groupId: EVENT-REQUIRE-ICON
    eventResetPassword:
      topicName: EVENT-RESET-PASSWORD
      groupId: EVENT-RESET-PASSWORD
################## Mail Buz Config ##################
mail:
  buz:
    subject:
      createNewUserMail: "[HTCC] Thông tin tài khoản mới"
      resetPasswordMail: "[HTCC] Đặt lại mật khẩu"

firebase:
  databaseURL: "https://checkinapp-9eac2.firebaseio.com"
  serviceAccountFile: "FireBase_AdminSDK.json"
