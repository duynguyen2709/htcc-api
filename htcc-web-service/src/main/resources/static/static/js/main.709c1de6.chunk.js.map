{"version":3,"sources":["Invoice/Invoice.module.scss","Error.js","App.js","serviceWorker.js","resetpassword/FormPasswordReset.js","Invoice/LineItem.js","Invoice/LineItems.js","Invoice/Invoice.js","index.js","Invoice/LineItems.module.scss","loading.gif","Invoice/LineItem.module.scss"],"names":["module","exports","Error","id","className","href","apiUrl","process","App","React","Component","constructor","props","super","setCompanyIdAndOfficeId","val","values","queryString","parse","companyId","officeId","this","setState","setNewImage","state","error","isLoading","now","Date","getTime","url","console","log","nextCountdown","bind","componentWillReceiveProps","nextProps","nextContext","location","search","componentDidMount","task","cron","schedule","render","src","loading","style","display","alt","onLoad","event","onError","destroy","date","withRouter","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","FormPasswordReset","resetPassword","password","clientId","username","token","data","axios","post","response","returnCode","alert","returnMessage","setTimeout","open","close","setParams","parseInt","textAlign","marginBottom","initialValues","confirmPassword","validationSchema","Yup","shape","min","required","oneOf","onSubmit","fields","errors","status","touched","htmlFor","name","type","component","LineItem","index","description","quantity","price","styles","lineItem","currency","currencyFormatter","LineItems","getNumEmployees","items","item","feature","featureId","value","functions","numEmployees","lineItems","gridTable","row","header","map","i","calcByEachEmployee","color","key","featureName","unitPrice","createOrderUrl","submitTransUrl","Invoice","locale","order","paymentName","paymentId","paymentCycleType","createOrder","params","supportedFeatures","finally","JSON","e","handlePayButtonClick","confirm","orderId","formatCurrency","amount","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","format","calcLineItemsTotal","total","calcTaxTotal","discountPercentage","calcGrandTotal","onChangePaymentName","target","onChangePaymentId","onChangePaymentCycleType","invoice","brand","width","logo","addresses","from","valueTable","to","label","margin","totalContainer","onChange","pay","payNow","onClick","ReactDOM","HashRouter","Route","exact","path","document","getElementById","URL","origin","addEventListener","fetch","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.709c1de6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"valueTable\":\"Invoice_valueTable__3F-Br\",\"row\":\"Invoice_row__1Da4d\",\"label\":\"Invoice_label__3WhgD\",\"currency\":\"Invoice_currency__1Z2Jl\",\"invoice\":\"Invoice_invoice__1jB4A\",\"brand\":\"Invoice_brand__Gplas\",\"logo\":\"Invoice_logo__2C1VL\",\"addresses\":\"Invoice_addresses____QeR\",\"from\":\"Invoice_from__jlRXr\",\"to\":\"Invoice_to__3wdLT\",\"value\":\"Invoice_value__3OJFK\",\"address\":\"Invoice_address__2u5RK\",\"totalContainer\":\"Invoice_totalContainer__zSvXj\",\"pay\":\"Invoice_pay__3ODM-\",\"payNow\":\"Invoice_payNow__22a7U\",\"footer\":\"Invoice_footer__1wIgD\",\"comments\":\"Invoice_comments__2z3FU\",\"closing\":\"Invoice_closing__aWdgZ\"};","import React from 'react';\n\nconst Error = () => {\n    return (<>\n        <div id=\"notfound\">\n            <div className=\"notfound\">\n                <div className=\"notfound-404\">\n                    <h1>500</h1>\n                </div>\n                <h2>Hệ thống có lỗi. Vui lòng thử lại sau.</h2>\n                <p>Đã xảy ra lỗi khi tải dữ liệu. Vui lòng tải lại trang</p>\n                <p>hoặc liên hệ quản trị viên để được hỗ trợ.</p>\n                {/*eslint-disable-next-line*/}\n                <a href=\"javascript:window.location.reload(true)\">Tải lại trang</a>\n            </div>\n        </div>\n    </>)\n};\n\nexport default Error;\n","import React from 'react';\nimport './index.css';\nimport {withRouter} from 'react-router-dom';\nimport cron from \"node-cron\";\nimport queryString from 'query-string';\nimport Countdown from 'react-countdown';\nimport Error from \"./Error\";\nimport loading from './loading.gif';\n\nconst apiUrl = `${process.env.REACT_APP_CS_ADMIN_URL}/genqrcode`;\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            url: '',\n            isLoading: true,\n            companyId: '',\n            officeId: '',\n            nextCountdown: new Date(),\n            error: false,\n        };\n\n        this.setNewImage = this.setNewImage.bind(this);\n        this.setCompanyIdAndOfficeId = this.setCompanyIdAndOfficeId.bind(this);\n    }\n\n    setCompanyIdAndOfficeId = (val) => {\n        const values = queryString.parse(val);\n        const {companyId, officeId} = values;\n\n        this.setState({\n            companyId: companyId,\n            officeId: officeId\n        }, () => {\n            this.setNewImage();\n        });\n\n    };\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        if (this.props.location.search !== nextProps.location.search) {\n            this.setCompanyIdAndOfficeId(nextProps.location.search);\n        }\n    }\n\n    componentDidMount() {\n        this.setCompanyIdAndOfficeId(this.props.location.search);\n\n        this.task = cron.schedule(\"*/5 * * * *\", () => {\n            this.setNewImage();\n        }, null);\n    }\n\n    setNewImage = () => {\n        if (this.state.error) {\n            return;\n        }\n\n        this.setState({\n            isLoading: true\n        });\n\n        const {companyId, officeId} = this.state;\n        const now = new Date().getTime();\n        // TODO : Remove this, load from config server\n        const url = `${apiUrl}?companyId=${companyId}&officeId=${officeId}&reqDate=${now}`;\n\n        console.log(`Load new QR Code at : ${now}\\nURL = ${url}`);\n        this.setState({\n            url: url,\n            nextCountdown: now + 300000\n        })\n    };\n\n    render() {\n        const {url, nextCountdown, error, isLoading} = this.state;\n\n        if (error) {\n            return <Error/>\n        }\n\n        return (\n            <>\n                <div>\n                    <img src={loading}\n                         style={{display: isLoading ? 'block' : 'none'}}\n                         className={\"center-div\"}\n                         alt={\"loading\"}/>\n\n                    <img alt={\"qrcode\"}\n                         style={{display: isLoading ? 'none' : 'block'}}\n                         className={\"center-div\"}\n                         src={url}\n                         onLoad={(event) => {\n                             this.setState({\n                                 isLoading: false,\n                             })\n                         }}\n                         onError={(event) => {\n                             this.task.destroy();\n                             this.setState({\n                                 error: true\n                             })\n                         }}\n                    />\n                </div>\n                <div className={\"countdown\"}\n                     style={{display: isLoading ? 'none' : 'block'}}\n                >\n                    <Countdown date={nextCountdown}/>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport {ErrorMessage, Field, Form, Formik} from 'formik';\nimport * as Yup from 'yup';\nimport queryString from \"query-string\";\nimport axios from 'axios';\nimport Error from \"../Error\";\n\nconst apiUrl = `${process.env.REACT_APP_CS_ADMIN_URL}/resetpassword`;\n\nexport default class FormPasswordReset extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            companyId: '',\n            clientId: 0,\n            username: '',\n            token: '',\n            error: false,\n        };\n\n        this.setParams = this.setParams.bind(this);\n        this.resetPassword = this.resetPassword.bind(this);\n    }\n\n    resetPassword = (values) => {\n        const {password} = values;\n        const {clientId, username, token} = this.state;\n        let {companyId} = this.state;\n        if (!companyId) {\n            companyId = '';\n        }\n\n        const data = {\n            clientId: clientId,\n            companyId: companyId,\n            username: username,\n            password: password,\n            token: token,\n        };\n\n        axios.post(apiUrl, data, {})\n            .then(response => {\n                if (response.data.returnCode === 1) {\n                    alert(response.data.returnMessage);\n                    setTimeout(() => {\n                        window.open(\"\", \"_self\");\n                        window.close();\n                    }, 1000);\n                }\n                else {\n                    alert(response.data.returnMessage);\n                }\n        }).catch(error => {\n            alert(\"Hệ thống có lỗi. Vui lòng thử lại sau\");\n            console.error(error);\n        })\n    };\n\n    setParams = (val) => {\n        this.setState({\n            error: false,\n        });\n\n        const values = queryString.parse(val);\n        const {companyId, username, token} = values;\n        let clientId = parseInt(values.clientId);\n\n        if ((clientId < 1 || clientId > 3) ||\n            !username || username === '' ||\n            !token || token === '' ||\n            ((clientId === 2 || clientId === 1) && (!companyId || companyId === ''))) {\n            this.setState({\n                error: true,\n            });\n\n            return;\n        }\n\n        this.setState({\n            companyId: companyId,\n            username: username,\n            clientId: clientId,\n            token: token,\n        });\n    };\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        if (this.props.location.search !== nextProps.location.search) {\n            this.setParams(nextProps.location.search);\n        }\n    }\n\n    componentDidMount() {\n        this.setParams(this.props.location.search);\n    }\n\n    render() {\n        const {error} = this.state;\n        if (error) {\n            return <Error/>\n        }\n\n        return (\n            <div className=\"jumbotron\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-6 offset-md-3\">\n                            <h3 style={{textAlign: 'center', marginBottom: '20px'}}>Thiết lập lại mật khẩu</h3>\n                            <Formik\n                                initialValues={{\n                                    password: '',\n                                    confirmPassword: ''\n                                }}\n                                validationSchema={Yup.object().shape({\n                                    password: Yup.string()\n                                        .min(6, 'Mật khẩu phải dài ít nhất 6 kí tự')\n                                        .required('Mật khẩu không được rỗng'),\n                                    confirmPassword: Yup.string()\n                                        .oneOf([Yup.ref('password'), null], 'Mật khẩu không khớp')\n                                        .required('Nhập lại mật khẩu không được rỗng')\n                                })}\n                                onSubmit={fields => {\n                                    this.resetPassword(fields);\n                                }}\n                                render={({errors, status, touched}) => (\n                                    <Form>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"password\">Mật khẩu mới</label>\n                                            <Field name=\"password\" type=\"password\"\n                                                   className={'form-control' + (errors.password && touched.password ? ' is-invalid' : '')}/>\n                                            <ErrorMessage name=\"password\" component=\"div\" className=\"invalid-feedback\"/>\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"confirmPassword\">Nhập lại mật khẩu</label>\n                                            <Field name=\"confirmPassword\" type=\"password\"\n                                                   className={'form-control' + (errors.confirmPassword && touched.confirmPassword ? ' is-invalid' : '')}/>\n                                            <ErrorMessage name=\"confirmPassword\" component=\"div\"\n                                                          className=\"invalid-feedback\"/>\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <button type=\"submit\" className=\"btn btn-primary mr-2\">Xác nhận</button>\n                                            <button type=\"reset\" className=\"btn btn-secondary\">Xóa</button>\n                                        </div>\n                                    </Form>\n                                )}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport styles from './LineItem.module.scss'\n\nclass LineItem extends Component {\n    render = () => {\n        const {index, description, quantity, price} = this.props;\n        return (\n            <div className={styles.lineItem}>\n                <div>{index + 1}</div>\n                <div>\n                    {description}\n                </div>\n                <div>\n                    {quantity}\n                </div>\n                <div className={styles.currency}>\n                    {price === 0 ? \"Miễn phí\" : this.props.currencyFormatter(price)}\n                </div>\n                <div className={styles.currency}>\n                    {price === 0 ? \"Miễn phí\" : this.props.currencyFormatter(quantity * price)}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default LineItem;\n\nLineItem.propTypes = {\n    index: PropTypes.number.isRequired,\n    description: PropTypes.string,\n    quantity: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    price: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n","import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\n\nimport LineItem from './LineItem'\nimport styles from './LineItems.module.scss'\n\nclass LineItems extends Component {\n\n    getNumEmployees = () => {\n        const {items} = this.props;\n        for (let item of items) {\n            if (item.feature.featureId === 'EMPLOYEE_MANAGE') {\n                return parseInt(item.value);\n            }\n        }\n\n        return 0;\n    };\n\n    render = () => {\n        const {items, ...functions} = this.props;\n        let index = 0;\n        let numEmployees = this.getNumEmployees();\n        return (\n            <form>\n                <div className={styles.lineItems}>\n                    <div className={`${styles.gridTable}`}>\n                        <div className={`${styles.row} ${styles.header}`}>\n                            <div>#</div>\n                            <div>Tính năng</div>\n                            <div>Số lượng</div>\n                            <div>Đơn giá</div>\n                            <div>Tổng</div>\n                        </div>\n\n                        {this.props.items.map((item, i) => {\n                                if (item.value === false) {\n                                    return null;\n                                }\n                                let quantity = 1;\n                                if (item.feature.featureId === 'EMPLOYEE_MANAGE') {\n                                    quantity = numEmployees;\n                                } else {\n                                    if (item.feature.calcByEachEmployee) {\n                                        quantity = numEmployees;\n                                    }\n                                }\n\n                                return <LineItem\n                                    style={{color: 'red'}}\n                                    key={item.feature.featureId} index={index++}\n                                    description={item.feature.featureName} quantity={quantity}\n                                    price={item.feature.unitPrice}\n                                    {...functions}\n                                />\n                            }\n                        )}\n                    </div>\n                </div>\n            </form>\n        )\n    }\n}\n\nexport default LineItems;\n\nLineItems.propTypes = {\n    items: PropTypes.array.isRequired,\n    currencyFormatter: PropTypes.func.isRequired,\n};\n\n\n","import React, {Component} from 'react'\nimport styles from './Invoice.module.scss'\n\nimport LineItems from './LineItems'\nimport Error from \"../Error\";\nimport loading from \"../loading.gif\";\nimport queryString from \"query-string\";\nimport axios from \"axios\";\n\nconst createOrderUrl = `${process.env.REACT_APP_CS_ADMIN_URL}/createorder`;\nconst submitTransUrl = `${process.env.REACT_APP_CS_ADMIN_URL}/submittrans`;\n\nclass Invoice extends Component {\n\n    locale = 'vi-VN';\n    currency = 'VND';\n\n    state = {\n        isLoading: true,\n        order: {},\n\n        paymentName: '',\n        paymentId: '',\n        paymentCycleType: 1,\n    };\n\n    createOrder = () => {\n        const {params} = this.state;\n\n        axios.post(createOrderUrl, params, {})\n            .then(response => {\n                if (response.data.returnCode === 1) {\n                    console.log(response.data.data);\n                    const order = response.data.data;\n                    let numEmployees = 0;\n                    for (let item of order.supportedFeatures) {\n                        if (item.feature.featureId === 'EMPLOYEE_MANAGE') {\n                            numEmployees = parseInt(item.value);\n                            break;\n                        }\n                    }\n\n                    this.setState({\n                        order: order,\n                        numEmployees: numEmployees\n                    })\n                } else {\n                    alert(response.data.returnMessage);\n                    this.setState({\n                        error: true,\n                    });\n                }\n            })\n            .catch(error => {\n                console.error(error);\n                this.setState({\n                    error: true,\n                });\n            })\n            .finally(() => {\n                this.setState({\n                    isLoading: false,\n                })\n            });\n    };\n\n    setParams = (val) => {\n        this.setState({\n            error: false,\n        });\n\n        try {\n            const values = queryString.parse(val);\n            const {params} = values;\n\n            this.setState({\n                params: JSON.parse(params)\n            }, () => this.createOrder());\n        } catch (e) {\n            this.setState({\n                error: true,\n            });\n        }\n    };\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        if (this.props.location.search !== nextProps.location.search) {\n            this.setParams(nextProps.location.search);\n        }\n    }\n\n    componentDidMount() {\n        this.setParams(this.props.location.search);\n    }\n\n    handlePayButtonClick = () => {\n        const {paymentName, paymentId, paymentCycleType, order} = this.state;\n        if (paymentName === '') {\n            alert('Tên người thanh toán không hợp lệ');\n            return;\n        }\n\n        if (paymentId === '') {\n            alert('Mã thanh toán không hợp lệ');\n            return;\n        }\n\n        const confirm = window.confirm('Bạn xác nhận thanh toán cho đơn hàng ?');\n        if (confirm) {\n            const data = {\n                paymentName,\n                paymentId,\n                paymentCycleType,\n                orderId: order.orderId\n            };\n\n            axios.post(submitTransUrl, data, {})\n                .then(response => {\n                    if (response.data.returnCode === 1) {\n                        alert(response.data.returnMessage);\n                        setTimeout(() => {\n                            window.open(\"\", \"_self\");\n                            window.close();\n                        }, 1000);\n                    } else {\n                        alert(response.data.returnMessage);\n                    }\n                })\n                .catch(error => {\n                    alert(\"Hệ thống có lỗi. Vui lòng thử lại sau\");\n                    console.error(error);\n                    this.setState({\n                        error: true,\n                    });\n                })\n        }\n    };\n\n    formatCurrency = (amount) => {\n        return (new Intl.NumberFormat(this.locale, {\n            style: 'currency',\n            currency: this.currency,\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2\n        }).format(amount))\n    };\n\n    calcLineItemsTotal = () => {\n        const {order, numEmployees} = this.state;\n        let total = 0;\n\n        for (let item of order.supportedFeatures) {\n            if (item.value === false) {\n                continue;\n            }\n\n            const {feature} = item;\n            if (feature.unitPrice > 0) {\n                if (feature.calcByEachEmployee) {\n                    total += feature.unitPrice * numEmployees;\n                } else {\n                    total += feature.unitPrice;\n                }\n            }\n        }\n        return total;\n    };\n\n    calcTaxTotal = () => {\n        return this.calcLineItemsTotal() * (this.state.order.discountPercentage / 100)\n    };\n\n    calcGrandTotal = () => {\n        return this.calcLineItemsTotal() - this.calcTaxTotal()\n    };\n\n    onChangePaymentName = (event) => {\n        const value = event.target.value;\n        this.setState({\n            paymentName: value,\n        })\n    };\n\n    onChangePaymentId = (event) => {\n        const value = event.target.value;\n        this.setState({\n            paymentId: value,\n        })\n    };\n\n    onChangePaymentCycleType = (event) => {\n        const value = event.target.value;\n        this.setState({\n            paymentCycleType: value,\n        })\n    };\n\n    render = () => {\n        const {error, isLoading, order} = this.state;\n\n        if (error) {\n            return <Error/>\n        }\n        if (isLoading) {\n            return <img src={loading}\n                        style={{display: isLoading ? 'block' : 'none'}}\n                        className={\"center-div\"}\n                        alt={\"loading\"}/>\n        }\n\n        return (\n\n            <div className={styles.invoice}>\n                <div className={styles.brand}>\n                    <img src=\"https://drive.google.com/uc?export=view&id=1x2tn-cRCtMJv_1qJZRLjK9firQjr1Wfo\"\n                         width=\"200px\"\n                         alt=\"Logo\" className={styles.logo}/>\n                </div>\n                <div className={styles.addresses}>\n                    <div className={styles.from}>\n                        <strong>Hệ thống HTCC</strong><br/>\n                        Đại học Khoa Học Tự Nhiên, 227, Nguyễn Văn Cừ, Phường 4, Quận 5, Hồ Chí Minh<br/>\n                        (84) 286 2884 499\n                    </div>\n                    <div>\n                        <div className={`${styles.valueTable} ${styles.to}`}>\n                            <div className={styles.row}>\n                                <div className={styles.label}>Mã công ty #</div>\n                                <div className={styles.value}>{order.companyId}</div>\n                            </div>\n                            <div className={styles.row}>\n                                <div className={styles.label}>Mã đơn hàng #</div>\n                                <div className={styles.value}>{order.orderId}</div>\n                            </div>\n                            <div className={styles.row}>\n                                <div className={styles.label}>Ngày</div>\n                                <div className={`${styles.value} ${styles.date}`}>{order.date}</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <h2 style={{margin: '20px 0'}}>Chi tiết đơn hàng</h2>\n\n                <LineItems\n                    items={order.supportedFeatures}\n                    currencyFormatter={this.formatCurrency}\n                />\n\n                <div className={styles.totalContainer}>\n                    <form>\n                        <div className={styles.valueTable}>\n                            <div className={styles.row}>\n                                <div className={styles.label} style={{width: '110%'}}>Khuyến mãi (%)</div>\n                                <div className={styles.value} style={{textAlign: 'center'}}>\n                                    {order.discountPercentage}\n                                </div>\n                            </div>\n                        </div>\n                        <h3 style={{margin: '30px 0'}}>Thông tin thanh toán</h3>\n                        <div className={styles.valueTable}>\n                            <div className={styles.row}>\n                                <div style={{display: 'inline'}}>Tên người thanh toán</div>\n                                <input name=\"paymentName\" type=\"text\" required onChange={this.onChangePaymentName}/>\n                            </div>\n                            <div className={styles.row}>\n                                <div style={{display: 'inline'}}>Mã thanh toán</div>\n                                <input name=\"paymentId\" type=\"text\" required onChange={this.onChangePaymentId}/>\n                            </div>\n                            <div className={styles.row}>\n                                <div style={{display: 'inline'}}>Loại thanh toán</div>\n                                <select name=\"paymentCycleType\" id=\"paymentCycleType\"\n                                        onChange={this.onChangePaymentCycleType}>\n                                    <option value=\"1\">Theo tháng</option>\n                                    <option value=\"2\">Theo năm</option>\n                                </select>\n                            </div>\n                        </div>\n                    </form>\n                    <form>\n                        <div className={styles.valueTable}>\n                            <div className={styles.row}>\n                                <div className={styles.label}>Tạm Tính</div>\n                                <div\n                                    className={`${styles.value} ${styles.currency}`}>{this.formatCurrency(this.calcLineItemsTotal())}</div>\n                            </div>\n                            <div className={styles.row}>\n                                <div className={styles.label}>Giảm giá ({this.state.order.discountPercentage}%)</div>\n                                <div\n                                    className={`${styles.value} ${styles.currency}`}>{this.formatCurrency(this.calcTaxTotal())}</div>\n                            </div>\n                            <div className={styles.row}>\n                                <div className={styles.label}>Tổng Tiền</div>\n                                <div\n                                    className={`${styles.value} ${styles.currency}`}>{this.formatCurrency(this.calcGrandTotal())}</div>\n                            </div>\n                            <div className={styles.row}>\n                                <div className={styles.label}>Trả theo tháng</div>\n                                <div\n                                    className={`${styles.value} ${styles.currency}`}>{this.formatCurrency(this.calcGrandTotal() / 12)}</div>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n\n                <div className={styles.pay}>\n                    <button className={styles.payNow} onClick={this.handlePayButtonClick}>Thanh toán</button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Invoice;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {HashRouter, Route} from 'react-router-dom';\nimport FormPasswordReset from \"./resetpassword/FormPasswordReset\";\nimport Invoice from \"./Invoice/Invoice\";\n\nReactDOM.render((\n    <HashRouter>\n        <div>\n            <Route exact path=\"/genqrcode\" component={App}/>\n            <Route exact path=\"/resetpassword\" component={FormPasswordReset}/>\n            <Route exact path=\"/createorder\" component={Invoice}/>\n        </div>\n    </HashRouter>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lineItems\":\"LineItems_lineItems__3WxKy\",\"addItem\":\"LineItems_addItem__FPJ9J\",\"gridTable\":\"LineItems_gridTable__DK84v\",\"row\":\"LineItems_row__1CBeV\",\"currency\":\"LineItems_currency__23pab\",\"addIcon\":\"LineItems_addIcon__2bN4i\",\"header\":\"LineItems_header__3VB8c\",\"editable\":\"LineItems_editable__3YLgs\"};","module.exports = __webpack_public_path__ + \"static/media/loading.1a197dfc.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lineItem\":\"LineItem_lineItem__OwS66\",\"currency\":\"LineItem_currency__1QeDD\"};"],"sourceRoot":""}